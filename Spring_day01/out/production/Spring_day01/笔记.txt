(一)Spring介绍
    1.Spring Framework  是一种轻量级的解决方案，是构建你的企业级应用程序的潜在一站式解决方案。
    2. Spring  是模块化的，允许你只使用你需要的那些部分，而不必引入其他的
    3.Spring  框架支持声明式事务管理，通过RMI或Web服务远程访问你的逻辑，以及用于持久存储数据的各种选项
    4.它提供了一个全功能的 MVC  框架，并使你能够将 AOP  透明地集成到你的软件中。
    5.Spring  设计为非侵入式的，这意味着你所写的逻辑代码通常没有对框架本身的依赖。
  Spring核心:IOC控制反转以及AOP面向切面编程
(二)控制反转(IOC)
    2.1 介绍
            2.1.1:IoC也称为依赖注入（DI）。它是一个过程，对象通过构造函数参数，工厂方法的参数或在对象实例构造或从工厂方法返
              回后在对象实例上设置的属性来定义它们的依赖关系，即它们一起合作的其他对象。 然后容
              器在创建bean时注入那些依赖。这个过程基本上是相反的，因此称为控制反转（IoC）
    2.2IOC容器
             2.2.1:接口 org.springframework.context.ApplicationContext表示Spring IoC容器,并负责实例
                   化，配置和组合上述bean。
    2.3依赖注入（ID）
             2.3.1:依赖注入（DI）是一个过程，对象通过构造函数参数，工厂方法的参数或在构造对象实例后
                    设置的属性来定义它们的依赖关系，即它们所处理的其他对象或从工厂方法返回。容器然后
                    在创建bean时注入这些依赖。这个过程基本上是相反的，因此名称为 Inversion of Control
                    （IoC），通过使用类的直接构造或 Service Locator 模式来控制其自身的依赖性来实例化或
                    通过调用的bean自身的名称(比如xml里的那些配置，通过名字直接调用到)。
             2.3.2:依赖注入三种方式:无参构造，有参构造以及Settring注入
             2.3.3:依赖解析过程
                    *.使用描述所有bean的配置元数据创建和初始化ApplicationContext。配置元数据可以通过XML，Java代码或注解指定。
                    *.对于每个bean，它的依赖关系以属性，构造函数参数或静态工厂方法的参数的形式表示，如果你使用而不是一个正常的构造函数。这些依赖关系提供给bean，实际创建bean时调用。
                    *.每个属性或构造函数参数是要设置的值的实际定义，或对容器中另一个bean的引用。
                        作为值的每个属性或构造函数参数从其指定的格式转换为该属性或构造函数参数的实际
                        类型。默认情况下，Spring可以将以字符串格式提供的值转换为所有内置类型，例
                        如int,long,String,boolean等。